.data
    pular_linha: .asciiz "\n"
    string1: .space 200
    string2: .space 200
.text
    main:
        # Ler o valor de N
        li $v0, 5
        syscall
        move $s0, $v0 # Armazenar N em $s0

        # Ler a primeira string 
        li $v0, 8
        la $a0, string1 # Armazena o endereço
        li $a1, 200 # Armazena o tamanho máximo da string
        syscall

        # Ler a segunda string
        li $v0, 8
        la $a0, string2 # Armazena o endereço
        li $a1, 200 # Armazena o tamanho máximo da string
        syscall

        la $t1, string1
        la $t2, string2

        # Inicializar o contador
        li $t3, 0

        # Inicializando o contador final
        li $t8, 0
    
    # For
    loop:
        beq $s0, $t3, printar # Se o contador for igual a N, saia do loop
        add $t4, $t1, $t3 # Calcular o endereço da proxima  posicao do vetor $t1
        add $t5, $t2, $t3 # Calcular o endereço da proxima  posicao do vetor $t2

        # Incrementar o contador
        addi $t3, $t3, 1

        lb $t6, 0($t4) # Carrega o elemento do vetor $t1 em $t6
        lb $t7, 0($t5) # Carrega o elemento do vetor $t2 em $t7

        beq $t6, $t7, contar_acertos # Se o as letras forem iguais acrescenta 1 no contador 

        j loop

    # Contador final
    contar_acertos:
        addi $t8, $t8, 1 # Adicionando 1 ao contador final
        j loop

    # Imprimir valores
    printar:
        # Imprimir contador final
        li $v0, 1
        move $a0, $t8
        syscall
        
        # Pular linha
        li $v0, 4
        la $a0, pular_linha
        syscall

        j exit
        
    # Sair do programa
    exit:    
        # Syscall para encerrar o programa
        li $v0, 10
        syscall